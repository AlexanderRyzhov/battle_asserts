level: medium
tags: [array, hash]
checks:
  ruby: |-
    baby = {'a' => {'b' => '1'}}
    assert_equal(baby, parse_http_params('a[b]=1'))
    easy = {'a' => {'c' => '2', 'b' => '1'}}
    assert_equal(easy, parse_http_params('a[b]=1&a[c]=2'))
    medium = {'x' => ['1', '2'], 'a' => {'d' => {'e' => '3'}, 'c' => '2', 'b' => '2'}}
    assert_equal(medium, parse_http_params('a[b]=2&a[c]=2&a[d][e]=3&x[]=1&x[]=2'))
    hard = {'a' => {'f' => ['24', '42'], 'd' => {'e' => '3'}, 'c' => '2', 'b' => '1'}}
    assert_equal(hard, parse_http_params('a[b]=1&a[c]=2&a[d][e]=3&a[f][]=24&a[f][]=42'))
    nightmare = {'x' => ['1', '2', '3'], 'a' => {'d' => ['1', '2'], 'c' => '2', 'b' => {'w' => {'y' => '3'}}}}
    assert_equal(nightmare, parse_http_params('a[b][w][y]=3&a[c]=2&a[d][]=1&a[d][]=2&x[]=1&x[]=2&x[]=3'))
  javascript: |-
    var baby = {a: {b: '1'}};
    assertEqual(baby, parseHttpParams('a[b]=1'));
    var easy = {a: {c: '2', b: '1'}};
    assertEqual(easy, parseHttpParams('a[b]=1&a[c]=2'));
    var medium = {x: ['1', '2'], a: {d: {e: '3'}, c: '2', b: '2'}};
    assertEqual(medium, parseHttpParams('a[b]=2&a[c]=2&a[d][e]=3&x[]=1&x[]=2'));
    var hard = {a: {f: ['24', '42'], d: {e: '3'}, c: '2', b: '1'}};
    assertEqual(hard, parseHttpParams('a[b]=1&a[c]=2&a[d][e]=3&a[f][]=24&a[f][]=42'));
    var nightmare = {x: ['1', '2', '3'], a: {d: ['1', '2'], c: '2', b: {w: {y: '3'}}}};
    assertEqual(nightmare, parseHttpParams('a[b][w][y]=3&a[c]=2&a[d][]=1&a[d][]=2&x[]=1&x[]=2&x[]=3'));
  php: |-
    $baby = array('a' => array('b' => '1'));
    assertEqual($baby, parseHttpParams('a[b]=1'));
    $easy = array('a' => array('c' => '2', 'b' => '1'));
    assertEqual($easy, parseHttpParams('a[b]=1&a[c]=2'));
    $medium = array('x' => array('1', '2'), 'a' => array('d' => array('e' => '3'), 'c' => '2', 'b' => '2'));
    assertEqual($medium, parseHttpParams('a[b]=2&a[c]=2&a[d][e]=3&x[]=1&x[]=2'));
    $hard = array('a' => array('f' => array('24', '42'), 'd' => array('e' => '3'), 'c' => '2', 'b' => '1'));
    assertEqual($hard, parseHttpParams('a[b]=1&a[c]=2&a[d][e]=3&a[f][]=24&a[f][]=42'));
    $nightmare = array('x' => array('1', '2', '3'), 'a' => array('d' => array('1', '2'), 'c' => '2', 'b' => array('w' => array('y' => '3'))));
    assertEqual($nightmare, parseHttpParams('a[b][w][y]=3&a[c]=2&a[d][]=1&a[d][]=2&x[]=1&x[]=2&x[]=3'));
  python: |-
    baby = {'a': {'b': '1'}}
    assert_equal(baby, parse_http_params('a[b]=1'))
    easy = {'a': {'c': '2', 'b': '1'}}
    assert_equal(easy, parse_http_params('a[b]=1&a[c]=2'))
    medium = {'x': ['1', '2'], 'a': {'d': {'e': '3'}, 'c': '2', 'b': '2'}}
    assert_equal(medium, parse_http_params('a[b]=2&a[c]=2&a[d][e]=3&x[]=1&x[]=2'))
    hard = {'a': {'f': ['24', '42'], 'd': {'e': '3'}, 'c': '2', 'b': '1'}}
    assert_equal(hard, parse_http_params('a[b]=1&a[c]=2&a[d][e]=3&a[f][]=24&a[f][]=42'))
    nightmare = {'x': ['1', '2', '3'], 'a': {'d': ['1', '2'], 'c': '2', 'b': {'w': {'y': '3'}}}}
    assert_equal(nightmare, parse_http_params('a[b][w][y]=3&a[c]=2&a[d][]=1&a[d][]=2&x[]=1&x[]=2&x[]=3'))
