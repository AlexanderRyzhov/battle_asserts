level: medium
tags: [regexp]
description: |
  Write a method to validate some strings that could potentially represent phone numbers.
  See if you can do it with a regular expression.
checks:
  javascript: |-
    var input = '5555555555';
    assertEqual(true, checkPhoneNumberFormat(input));
    var input = '555555555';
    assertEqual(true, checkPhoneNumberFormat(input));
    var input = '555-5555';
    assertEqual(true, checkPhoneNumberFormat(input));
    var input = '(555) 555-5555';
    assertEqual(true, checkPhoneNumberFormat(input));
    var input = '(555) 555-555';
    assertEqual(true, checkPhoneNumberFormat(input));
    var input = '(555) 555-555-5555';
    assertEqual(true, checkPhoneNumberFormat(input));
    var input = '(555) 555a-555-5555';
    assertEqual(false, checkPhoneNumberFormat(input));
    var input = '555*-555-5555';
    assertEqual(false, checkPhoneNumberFormat(input));
    var input = '55a-555-5555';
    assertEqual(false, checkPhoneNumberFormat(input));
    var input = '55-55-55';
    assertEqual(true, checkPhoneNumberFormat(input));
    var input = '55 55 55';
    assertEqual(true, checkPhoneNumberFormat(input));
  ruby: |-
    input = '5555555555'
    assert_equal(true, check_phone_number_format(input))
    input = '555555555'
    assert_equal(true, check_phone_number_format(input))
    input = '555-5555'
    assert_equal(true, check_phone_number_format(input))
    input = '(555) 555-5555'
    assert_equal(true, check_phone_number_format(input))
    input = '(555) 555-555'
    assert_equal(true, check_phone_number_format(input))
    input = '(555) 555-555-5555'
    assert_equal(true, check_phone_number_format(input))
    input = '(555) 555a-555-5555'
    assert_equal(false, check_phone_number_format(input))
    input = '555*-555-5555'
    assert_equal(false, check_phone_number_format(input))
    input = '55a-555-5555'
    assert_equal(false, check_phone_number_format(input))
    input = '55-55-55'
    assert_equal(true, check_phone_number_format(input))
    input = '55 55 55'
    assert_equal(true, check_phone_number_format(input))
  python: |-
    input = '5555555555'
    assert_equal(True, check_phone_number_format(input))
    input = '555555555'
    assert_equal(True, check_phone_number_format(input))
    input = '555-5555'
    assert_equal(True, check_phone_number_format(input))
    input = '(555) 555-5555'
    assert_equal(True, check_phone_number_format(input))
    input = '(555) 555-555'
    assert_equal(True, check_phone_number_format(input))
    input = '(555) 555-555-5555'
    assert_equal(True, check_phone_number_format(input))
    input = '(555) 555a-555-5555'
    assert_equal(False, check_phone_number_format(input))
    input = '555*-555-5555'
    assert_equal(False, check_phone_number_format(input))
    input = '55a-555-5555'
    assert_equal(False, check_phone_number_format(input))
    input = '55-55-55'
    assert_equal(True, check_phone_number_format(input))
    input = '55 55 55'
    assert_equal(True, check_phone_number_format(input))
  php: |-
    $input = '5555555555';
    assertEqual(true, checkPhoneNumberFormat($input));
    $input = '555555555';
    assertEqual(true, checkPhoneNumberFormat($input));
    $input = '555-5555';
    assertEqual(true, checkPhoneNumberFormat($input));
    $input = '(555) 555-5555';
    assertEqual(true, checkPhoneNumberFormat($input));
    $input = '(555) 555-555';
    assertEqual(true, checkPhoneNumberFormat($input));
    $input = '(555) 555-555-5555';
    assertEqual(true, checkPhoneNumberFormat($input));
    $input = '(555) 555a-555-5555';
    assertEqual(false, checkPhoneNumberFormat($input));
    $input = '555*-555-5555';
    assertEqual(false, checkPhoneNumberFormat($input));
    $input = '55a-555-5555';
    assertEqual(false, checkPhoneNumberFormat($input));
    $input = '55-55-55';
    assertEqual(true, checkPhoneNumberFormat($input));
    $input = '55 55 55';
    assertEqual(true, checkPhoneNumberFormat($input));
