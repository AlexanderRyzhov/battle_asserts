checks:
  python: |-
    input = '¯|___|¯¯¯¯¯|___|¯|_|¯'
    output = '010010000100111'
    assert_equal(output, nrzi_encoding(input))
    input = '¯|__|¯|___|¯¯'
    output = '010110010'
    assert_equal(output, nrzi_encoding(input))
    input = '_|¯¯¯|_|¯¯¯¯|_|¯¯'
    output = '010011000110'
    assert_equal(output, nrzi_encoding(input))
  php: |-
    $input = '¯|___|¯¯¯¯¯|___|¯|_|¯';
    $output = '010010000100111';
    assertEqual($output, nrziEncoding($input));
    $input = '¯|__|¯|___|¯¯';
    $output = '010110010';
    assertEqual($output, nrziEncoding($input));
    $input = '_|¯¯¯|_|¯¯¯¯|_|¯¯';
    $output = '010011000110';
    assertEqual($output, nrziEncoding($input));
  javascript: |-
    var input = '¯|___|¯¯¯¯¯|___|¯|_|¯';
    var output = '010010000100111';
    assertEqual(output, nrziEncoding(input));
    var input = '¯|__|¯|___|¯¯';
    var output = '010110010';
    assertEqual(output, nrziEncoding(input));
    var input = '_|¯¯¯|_|¯¯¯¯|_|¯¯';
    var output = '010011000110';
    assertEqual(output, nrziEncoding(input));
  ruby: |-
    input = '¯|___|¯¯¯¯¯|___|¯|_|¯'
    output = '010010000100111'
    assert_equal(output, nrzi_encoding(input))
    input = '¯|__|¯|___|¯¯'
    output = '010110010'
    assert_equal(output, nrzi_encoding(input))
    input = '_|¯¯¯|_|¯¯¯¯|_|¯¯'
    output = '010011000110'
    assert_equal(output, nrzi_encoding(input))
level: medium
tags: []
description: |
  Non return to zero, inverted (NRZI) is a method of mapping a binary signal to a physical signal
  for transmission over some transmission media. The two level NRZI signal has a transition at
  a clock boundary if the bit being transmitted is a logical 1,
  and does not have a transition if the bit being transmitted is a logical 0.

   0 100 10000 100 1 1 1
   ¯|___|¯¯¯¯¯|___|¯|_|¯
